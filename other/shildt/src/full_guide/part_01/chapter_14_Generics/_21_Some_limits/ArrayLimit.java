package full_guide.part_01.chapter_14_Generics._21_Some_limits;

/**
 * Created by mega on 06.09.2016.
 */
// Имеются два важных ограничения, накладываемые на обобщения и касающие­
//        ся массивов. Во-первых, нельзя создать экземпляр массива, тип элемента которого
//        определяется параметром типа. И во-вторых, нельзя создать массив специфиче­
//        ских для типа обобщенных ссылок.

class Gen<T> {
    T ob;
    T[] val; // верно

    public Gen(T ob, T[] val) {
        this.ob = ob;
//        this.val = new T[10]; // нельзя создать массив типа T
        this.val = val; // а присвоить ссылку на существующий можно

    }
}


public class ArrayLimit {
    public static void main(String[] args) {
        Integer[] arr = {1, 2, 3, 45};
        Gen<Integer> gen = new Gen<>(100, arr);

        // Нельзя создать массив конкретной обобщенной ссылки
//        Gen<Integer>[] gens = new Gen<>[10]; // compile error

        // а так можно
        Gen<?>[] gens = new Gen<?>[10]; // это лучше, чем raw. Хоть какие-то проверки компилятор делает.

    }
}
//    Создать массив типа Т нельзя потому, что тип Т не существует во время выполнения,
//    а следовательно, компилятор не в состоянии выяснить, массив элементов
//        какого типа требуется в действительности создавать.
//        Тем не менее конструктору Gen() можно передать ссылку на совместимый
//        по типу массив при создани и объекта и присвоить эту ссылку переменной val.
