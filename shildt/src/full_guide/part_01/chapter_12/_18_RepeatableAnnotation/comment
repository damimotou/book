Еще одна новая возможность, появившаяся в версии JDK 8, позволяет повторять
аннотации в одном и том же элементе. Такие аннотации называются повто -
ряющимися. Для того чтобы сделать аннотацию повторяющейся, ее следует снабдить
аннотацией @Repeatable, определенной в пакете java.lang.annotation.
В ее поле value указывается тип контейнера для повторяющейся аннотации. Такой
контейнер указывается в виде аннотации, для которой поле value является массивом
типа повторяющейся аннотации. Следовательно, чтобы сделать аннотацию
повторяющейся, прежде нужно создать контейнерную аннотацию, а затем указать
ее тип в качестве аргумента аннотации @ Repeatable.
Для доступа к повторяющимся аннотациями с помощью такого метода, как, например,
getAnnotation(), следует воспользоваться контейнерной, а не самой
повторяющейся аннотацией. Именно такой подход и демонстрируется в приведенном
ниже примере программы. В этой программе представленная ранее версия
аннотации MyAnno преобразуется в повторяющуюся аннотацию, а затем демонстрируется
ее применение.

Еще один способ получить повторяющиеся аннотации состоит в том, чтобы
воспользоваться одним из новых методов, оперирующих непосредственно повторяющейся
аннотацией и внедренных в интерфейс AnnotatedElement в версии JDК8.
Это методы getAnnotations ByType() и getDeclaredAnnotationsByТуре().

Некоторые ограничения на аннотации
Существует ряд ограничений, накладываемых на объявления аннотаций. Вопервых,
одна аннотация не может наследовать другую. Во-вторых, все методы,
объявленные в аннотации, должны быть без параметров. Кроме того, они должны
возвращать один из перечисленных ниже типов:
- примитивный тип наподобие int или double ;
- объект класса String или Class;
- перечислимый тип;
- тип другой аннотации;
- массив одного из предыдущих типов.
Аннотации не могут быть обобщенными. Иными словами, они не могут прини·
мать параметры типа. И наконец, при
объявлении методов в аннотациях нельзя указывать оператор throws.