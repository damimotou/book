package _01.base.lessonfirst;

public class _21_BitOperation {

	public static void main(String[] args) {
		/*	
		 Самый левй бит (8 справа-налево для 1 байта) знаковый: 0 - положит  1 - отрицат
		 
		1 byte(8 bit)  dec             
		------------------
		 0000 0000      0
		 0000 0001      1
		 0000 0010      2
		 0000 0011      3
		 0000 0100      4
		 .........      ...
		 0111 1111      127
		 _____________________
		 1111 1111      -1
		 1111 1110      -2
		 1111 1101      -3
		 1111 1100      -4
		 1111 1011      -5
		 .........      ...
		 1000 0000      -128		 
		 */
		
		int a = 5;         //    0101
		int b = 12;        //    1100
		                   // &  0100  -> 4
		
		System.out.println(a & b);  // 4
		
//	    0101
//	    1100		
//   |  1101  -> 13
		
		
		System.out.println(a | b);  // 13
		
//	    0101
//	    1100		
//   ^  1001  -> 9
		
		System.out.println(a ^ b);  // 9
		
		int res = (a ^ b) + (a | b) - (a & b);
		System.out.println(res); // 9 + 13 - 4 = 18
		
		      
		
//		           5     12  
		int res2 = a++ ^ b;	// 5 ^ 12	
//	    0101     5
//	    1100     12		
//   ^  1001  -> 9		
		System.out.println(res2); // 9
		
		a = 5;         //    0101
		b = 12;        //    1100	
		
//                   5   12  
        int res3 = ++a ^ b;	// 6 ^ 12	
//      0110     6
//      1100     12		
//   ^  1010  -> 10		
System.out.println(res3); // 10

a = 5;         //    0101
b = 12;        //    1100

// ПОРАЗРЯДНОЕ НЕ - унарная операция инвертирует все биты вкл. незначащие
a = ~a;                   // 00000000 00000000 00000000 00000101  ~   5    int 32 bit слева заполняется 0
System.out.println(a);    // 11111111 11111111 11111111 11111010  -> -6   знаковый бит тоже инвертируется

		
	}

}
